AWSTemplateFormatVersion: 2010-09-09
Description: Master template for OpenShift 4.1 that includes nested templates
Parameters:
  ClusterName:
    AllowedPattern: '^([a-zA-Z][a-zA-Z0-9\-]{0,26})$'
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: >-
      Cluster name must be alphanumeric, start with a letter, and have a maximum
      of 27 characters.
    Description: >-
      A short, representative cluster name to use for host names and other
      identifying names.
    Type: String
  MyInfrastructureName:
    AllowedPattern: '^([a-zA-Z][a-zA-Z0-9\-]{0,26})$'
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: >-
      Infrastructure name must be alphanumeric, start with a letter, and have a
      maximum of 27 characters.
    Description: >-
      A short, unique cluster ID used to tag cloud resources and identify items
      owned or used by the cluster.
    Type: String
  HostedZoneId:
    Description: >-
      The Route53 public zone ID to register the targets with, such as
      Z21IXYZABCZ2A4.
    Type: String
  HostedZoneName:
    Description: >-
      The Route53 zone to register the targets with, such as example.com. Omit
      the trailing period.
    Type: String
    Default: example.com
  PrivateHostedZoneName:
    Description: >-
      The Route53 zone to register the targets with, such as example.com. Omit
      the trailing period.
    Type: String
    Default: example.com
  PublicSubnets:
    Description: The internet-facing subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
  PrivateSubnets:
    Description: The internal subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
  VpcId:
    Description: The VPC-scoped resources will belong to this VPC.
    Type: 'AWS::EC2::VPC::Id'
  VpcCidr:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
    Default: 10.0.0.0/16
    Description: CIDR block for VPC.
    Type: String
  BootstrapRhcosAmi:
    Description: Current Red Hat Enterprise Linux CoreOS AMI to use for boostrap.
    Type: 'AWS::EC2::Image::Id'
  MasterRhcosAmi:
    Description: Current Red Hat Enterprise Linux CoreOS AMI to use for boostrap.
    Type: 'AWS::EC2::Image::Id'
  AutoRegisterDNS:
    Default: 'yes'
    AllowedValues:
      - 'yes'
      - 'no'
    Description: >-
      Do you want to invoke DNS etcd registration, which requires Hosted Zone
      information?
    Type: String
  Master0Subnet:
    Description: 'The subnets, recommend private, to launch the master nodes into.'
    Type: 'AWS::EC2::Subnet::Id'
  Master1Subnet:
    Description: 'The subnets, recommend private, to launch the master nodes into.'
    Type: 'AWS::EC2::Subnet::Id'
  Master2Subnet:
    Description: 'The subnets, recommend private, to launch the master nodes into.'
    Type: 'AWS::EC2::Subnet::Id'
  MasterSecurityGroupId:
    Description: The master security group ID to associate with master nodes.
    Type: 'AWS::EC2::SecurityGroup::Id'
  MasterInstanceType:
    Default: m4.xlarge
    Type: String
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.8xlarge
      - m4.10xlarge
      - m4.16xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
  MasterCertificateAuthorities:
    Default: 'data:text/plain;charset=utf-8;base64,ABC...xYz=='
    Description: Base64 encoded certificate authority string to use.
    Type: String
  MasterInstanceProfileName:
    Description: IAM profile to associate with master nodes.
    Type: String
  WorkerRhcosAmi:
    Description: Current Red Hat Enterprise Linux CoreOS AMI to use for boostrap.
    Type: 'AWS::EC2::Image::Id'
  Worker1Subnet:
    Description: The first internal worker subnet.
    Type: 'AWS::EC2::Subnet::Id'
  Worker2Subnet:
    Description: The second internal worker subnet.
    Type: 'AWS::EC2::Subnet::Id'
  Worker3Subnet:
    Description: The third internal worker subnet.
    Type: 'AWS::EC2::Subnet::Id'
  WorkerSecurityGroupId:
    Description: The master security group ID to associate with master nodes.
    Type: 'AWS::EC2::SecurityGroup::Id'
  WorkerCertificateAuthorities:
    Default: 'data:text/plain;charset=utf-8;base64,ABC...xYz=='
    Description: Base64 encoded certificate authority string to use.
    Type: String
  WorkerInstanceProfileName:
    Description: IAM profile to associate with master nodes.
    Type: String
  WorkerInstanceType:
    Default: m4.large
    Type: String
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.8xlarge
      - m4.10xlarge
      - m4.16xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
  AllowedBootstrapSshCidr:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-32.
    Default: 0.0.0.0/0
    Description: CIDR block to allow SSH access to the bootstrap node.
    Type: String
  BootstrapPublicSubnet:
    Description: The public subnet to launch the bootstrap node into.
    Type: 'AWS::EC2::Subnet::Id'
  BootstrapIgnitionLocation:
    Default: 's3://my-s3-bucket/bootstrap.ign'
    Description: Ignition config file location.
    Type: String
  MasterIgnitionLocation:
    Default: 'https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/master'
    Description: Ignition config file location.
    Type: String
  WorkerIgnitionLocation:
    Default: 'https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/worker'
    Description: Ignition config file location.
    Type: String
  AutoRegisterELB:
    Default: 'yes'
    AllowedValues:
      - 'yes'
      - 'no'
    Description: >-
      Do you want to invoke NLB registration, which requires a Lambda ARN
      parameter?
    Type: String
  RegisterNlbIpTargetsLambdaArn:
    Description: >-
      ARN for NLB IP target registration lambda. Supply the value from the
      cluster infrastructure or select "no" for AutoRegisterELB.
    Type: String
  ExternalApiTargetGroupArn:
    Description: >-
      ARN for external API load balancer target group. Supply the value from the
      cluster infrastructure or select "no" for AutoRegisterELB.
    Type: String
  InternalApiTargetGroupArn:
    Description: >-
      ARN for internal API load balancer target group. Supply the value from the
      cluster infrastructure or select "no" for AutoRegisterELB.
    Type: String
  InternalServiceTargetGroupArn:
    Description: >-
      ARN for internal service load balancer target group. Supply the value from
      the cluster infrastructure or select "no" for AutoRegisterELB.
    Type: String
  VPCTemplateURL:
    Description: >-
      S3 url to template.
    Type: String
  NetworkTemplateURL:
    Description: >-
      S3 url to template.
    Type: String
  SGTemplateURL:
    Description: >-
      S3 url to template.
    Type: String
  BootstrapURL:
    Description: >-
      S3 url to template.
    Type: String
  ControlTemplateURL:
    Description: >-
      S3 url to template.
    Type: String
  WorkerTemplateURL:
    Description: >-
      S3 url to template.
    Type: String

Resources:
  NetworkAndLBStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref NetworkTemplateURL
      Parameters:
        ClusterName: !Ref ClusterName
        InfrastructureName: !Ref MyInfrastructureName
        HostedZoneId: !Ref HostedZoneId
        HostedZoneName: !Ref HostedZoneName
        PublicSubnets: !Join 
          - ','
          - !Ref PublicSubnets
        PrivateSubnets: !Join 
          - ','
          - !Ref PrivateSubnets
        VpcId: !Ref VpcId
        
  SGAndRoleStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref SGTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        PrivateSubnets: !Join 
          - ','
          - !Ref PrivateSubnets
        VpcId: !Ref VpcId
        VpcCidr: !Ref VpcCidr

  BootstrapStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref BootstrapTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        VpcId: !Ref VpcId
        RhcosAmi: !Ref BootstrapRhcosAmi
        MasterSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.MasterSecurityGroupId
        BootstrapIgnitionLocation: !Ref BootstrapIgnitionLocation
        AutoRegisterELB: !Ref AutoRegisterELB
        PublicSubnet: !Ref BootstrapPublicSubnet
        RegisterNlbIpTargetsLambdaArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.RegisterNlbIpTargetsLambda
        ExternalApiTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.ExternalApiTargetGroupArn
        InternalApiTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.InternalApiTargetGroupArn
        InternalServiceTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.InternalServiceTargetGroupArn

  ControlPlaneStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref ControlTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref MasterRhcosAmi
        AutoRegisterDNS: !Ref AutoRegisterDNS
        PrivateHostedZoneId: 
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.PrivateHostedZoneId
        PrivateHostedZoneName: !Ref PrivateHostedZoneName
        Master0Subnet: !Ref Master0Subnet
        Master1Subnet: !Ref Master1Subnet
        Master2Subnet: !Ref Master2Subnet
        MasterSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.MasterSecurityGroupId
        IgnitionLocation: !Ref MasterIgnitionLocation
        CertificateAuthorities: !Ref MasterCertificateAuthorities
        MasterInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.MasterInstanceProfile
        MasterInstanceType: !Ref MasterInstanceType
        AutoRegisterELB: !Ref AutoRegisterELB
        RegisterNlbIpTargetsLambdaArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.RegisterNlbIpTargetsLambda
        ExternalApiTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.ExternalApiTargetGroupArn
        InternalApiTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.InternalApiTargetGroupArn
        InternalServiceTargetGroupArn:
          Fn::GetAtt:
          - NetworkAndLBStack
          - Outputs.InternalServiceTargetGroupArn

  Worker1Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker1Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType

  Worker2Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker1Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType

  Worker3Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker2Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType
    
  Worker4Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker2Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType

  Worker5Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker3Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType

  Worker6Stack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        !Ref WorkerTemplateURL
      Parameters:
        InfrastructureName: !Ref MyInfrastructureName
        RhcosAmi: !Ref WorkerRhcosAmi
        Subnet: !Ref Worker3Subnet
        WorkerSecurityGroupId:
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerSecurityGroupId
        IgnitionLocation: !Ref WorkerIgnitionLocation
        CertificateAuthorities: !Ref WorkerCertificateAuthorities
        WorkerInstanceProfileName: 
          Fn::GetAtt:
          - SGAndRoleStack
          - Outputs.WorkerInstanceProfile
        WorkerInstanceType: !Ref WorkerInstanceType

Outputs:
  PrivateHostedZoneId:
    Description: 'Hosted zone ID for the private DNS, which is required for private records.'
    Value: '!GetAtt NetworkAndLBStack.Outputs.PrivateHostedZoneId'
  ExternalApiLoadBalancerName:
    Description: Full name of the External API load balancer created.
    Value: '!GetAtt NetworkAndLBStack.Outputs.ExternalApiLoadBalancerName'
  InternalApiLoadBalancerName:
    Description: Full name of the Internal API load balancer created.
    Value: '!GetAtt NetworkAndLBStack.Outputs.InternalApiLoadBalancerName'
  ApiServerDnsName:
    Description: >-
      Full hostname of the API server, which is required for the Ignition config
      files.
    Value: '!GetAtt NetworkAndLBStack.Outputs.ApiServerDnsName'
  RegisterNlbIpTargetsLambda:
    Description: >-
      Lambda ARN useful to help register or deregister IP targets for these load
      balancers.
    Value: '!GetAtt NetworkAndLBStack.Outputs.RegisterNlbIpTargetsLambda'
  ExternalApiTargetGroupArn:
    Description: ARN of External API target group.
    Value: '!GetAtt NetworkAndLBStack.Outputs.ExternalApiTargetGroupArn'
  InternalApiTargetGroupArn:
    Description: ARN of Internal API target group.
    Value: '!GetAtt NetworkAndLBStack.Outputs.InternalApiTargetGroupArn'
  InternalServiceTargetGroupArn:
    Description: ARN of internal service target group.
    Value: '!GetAtt NetworkAndLBStack.Outputs.InternalServiceTargetGroupArn'
